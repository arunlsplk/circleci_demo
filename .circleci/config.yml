version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.11.4

    steps:
      - checkout  # Checkout the source code from your repository

      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt

      - run:
          name: Compile Python Files to .pyc
          command: |
            python -m compileall python_project/.;
            mkdir /tmp/pycfiles;
      - store_artifacts:
          path: python_project/__pycache__  # Replace with the correct path to the __pycache__ directory
          destination: tmp/pycfiles

      # Store the .pyc files as artifacts
      
  python_package:
    docker:
      - image: cimg/python:3.11.4
    steps:
      - checkout
      - run:
          name: Generating distribution archives
          command: |
            cd python_project/python_package;
            ls;
            python3 -m pip install --upgrade build;
            python3 -m pip install --upgrade pip;
            python3 -m build;
            ls;
            cd dist;
            ls;
      - run:
          name: uploading distribution events
          command: |
            pwd; 
            ls;
            python3 -m pip install --upgrade twine;
            echo "testing";
            ls;
            python3 -m twine upload --repository testpypi python_project/python_package/dist/* ;
            \<< EOF
            arunl
            Splk#vlr@123
            EOF
workflows:
  build_workflow:
    jobs:
      - build
      - python_package
