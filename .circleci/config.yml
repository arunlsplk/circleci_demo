version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.11.4

    steps:
      - checkout  # Checkout the source code from your repository

      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt

      - run:
          name: Compile Python Files to .pyc
          command: |
            python -m compileall python_project/.;
            mkdir /tmp/pycfiles;
      - store_artifacts:
          path: python_project/__pycache__  # Replace with the correct path to the __pycache__ directory
          destination: tmp/pycfiles

      # Store the .pyc files as artifacts
  dummy-artifactory:
    docker:
      - image: python:3.6.3-jessie
    working_directory: /tmp
    steps:
      - run:
          name: Artifactory Upload Artifacts
          command: |
            echo "my artifact file" > /tmp/artifact-1;
            mkdir /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/artifacts-2;
      - store_artifacts:
          path: /tmp/artifact-1
          destination: artifact-file

      - store_artifacts:
          path: /tmp/artifacts

  upload-dummy-artifact:
    docker:
      - image: python:3.6.3-jessie
    working_directory: /tmp
    steps:
      - run:
          name: Install JFrog CLI
          command: curl -fL https://getcli.jfrog.io | sh

      - run:
          name: push to Artifactory
          command: |
            ./jfrog config add arsoft.jfrog.io --artifactory-url $ARTIFACTORY_URL --user arunl --enc-password=false --access-token=$ARTIFACTORY_TOKEN
            ./jfrog rt u artifacts/ pypi --build-name=testupload --build-number=1.0.1
              
workflows:
  build_workflow:
    jobs:
      - build
     # - python_package
  dummy-artifactory:
    jobs:
      - dummy-artifactory
      - upload-dummy-artifact


